#!/usr/bin/env bash
# Auto-scale font size and line height based on display DPI/scale
set -euo pipefail

CONFIG_DIR=${XDG_CONFIG_HOME:-$HOME/.config}/kitty
LOCAL_DIR="$CONFIG_DIR/local"
OUT_FILE="$LOCAL_DIR/font-scale.conf"
SOCKET=${KITTY_LISTEN_ON:-unix:$HOME/.cache/kitty/kitty-$USER.sock}

mkdir -p "$LOCAL_DIR"

# Detect DPI or scale factor
dpi=""
scale=""

if command -v xdpyinfo >/dev/null 2>&1; then
  dpi=$(xdpyinfo 2>/dev/null | awk '/resolution:/ {print $2}' | head -1 | cut -dx -f1)
fi

if [[ -z "$dpi" ]] && command -v gsettings >/dev/null 2>&1; then
  scale=$(gsettings get org.gnome.desktop.interface text-scaling-factor 2>/dev/null | tr -d "'" || true)
fi

font_size=13.0
line_height_adj=""

if [[ -n "$dpi" ]]; then
  d=${dpi%%.*}
  if (( d < 110 )); then
    font_size=13.0; line_height_adj=0
  elif (( d < 140 )); then
    font_size=14.0; line_height_adj=1
  elif (( d < 190 )); then
    font_size=16.0; line_height_adj=2
  else
    font_size=18.0; line_height_adj=3
  fi
elif [[ -n "$scale" ]]; then
  s=${scale%%.*}
  case "$s" in
    0|1) font_size=13.0; line_height_adj=0 ;;
    2) font_size=16.0; line_height_adj=2 ;;
    3) font_size=18.0; line_height_adj=3 ;;
    *) font_size=14.0; line_height_adj=1 ;;
  esac
else
  font_size=14.0; line_height_adj=1
fi

{
  echo "# Auto-generated by auto_scale.sh"
  echo "font_size ${font_size}"
  if [[ -n "${line_height_adj}" ]]; then
    echo "adjust_line_height ${line_height_adj}"
  fi
} >"$OUT_FILE"

if kitty @ --to "$SOCKET" load-config 2>/dev/null; then
  echo "Applied font_size=${font_size} adjust_line_height=${line_height_adj:-0}"
else
  echo "Wrote ${OUT_FILE}. Press reload (Ctrl+Shift+F5) to apply."
fi
